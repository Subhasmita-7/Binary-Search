class Solution {
    public int[] searchRange(int[] nums, int target) {
        int[] res = {-1,-1};
        res[0] = firstOcc(nums, target);
        res[1] = lastOcc(nums, target);

        return res;
    }

    private int firstOcc(int[] nums,int target){
        int n = nums.length;
        int start=0;
        int end=n-1;
        int res=-1;
        while(start<=end){
            int mid = start+(end-start)/2;
            if(nums[mid]==target){
                res = mid;
                end = mid-1;
            }
            else if(target<nums[mid]){
                end = mid-1;
            }
            else{
                start = mid+1;
            }
        }
        return res;
    }
    private int lastOcc(int[] nums , int target){
        int n = nums.length;
        int start = 0;
        int end = n-1;
        int res = -1;
         
        while(start<=end){
            int mid = start + (end - start) / 2;
            if(target==nums[mid]){
                res = mid;
                start = mid+1;
            }
            else if(target<nums[mid]){
                end=mid-1;
            }
            else{
                start=mid+1;
            }
        }
        return res;
    }
}
